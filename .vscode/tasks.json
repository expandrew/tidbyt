{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "inputs": [
    {
      "id": "appName",
      "description": "Which app do you want to run?",
      "type": "pickString",
      "options": ["allclassical", "wnyc", "wqxr"]
    }
  ],
  "tasks": [
    {
      "label": "Pixlet: Serve",
      "detail": "Start the app in Pixlet",
      "type": "shell",
      "command": "pixlet serve ${input:appName}/${input:appName}.star",
      "problemMatcher": []
    },
    {
      "label": "Pixlet: Format",
      "detail": "Format with Pixlet's built-in formatting",
      "type": "shell",
      "command": "pixlet format ${input:appName}/${input:appName}.star",
      "problemMatcher": [],
      "presentation": {
        "reveal": "never",
        "revealProblems": "onProblem",
        "close": true
      }
    },
    {
      "label": "Pixlet: Render and push to my Tidbyt",
      "detail": "Render and push it to my Tidbyt",
      "type": "shell",
      "command": "pixlet render ${input:appName}/${input:appName}.star && pixlet push --installation-id '${input:appName}' promptly-relieved-relaxed-sparrowhawk-d4e ${input:appName}/${input:appName}.webp",
      "problemMatcher": [],
      "presentation": {
        "reveal": "never",
        "revealProblems": "onProblem",
        "close": true
      }
    },
    {
      "label": "Pixlet: Generate the preview gif",
      "detail": "Generate the preview GIF for my README",
      "type": "shell",
      "command": "pixlet render ${input:appName}/${input:appName}.star --gif --magnify 5",
      "problemMatcher": [],
      "presentation": {
        "reveal": "never",
        "revealProblems": "onProblem",
        "close": true
      }
    },
    {
      "label": "Mocks: Start server",
      "detail": "Serve mock responses from my local machine for different scenarios from the real endpoint",
      "type": "shell",
      "command": "python3 -m http.server 61010 --bind 127.0.0.1 --directory ./${input:appName}/mocks",
      "problemMatcher": []
    }
  ]
}
